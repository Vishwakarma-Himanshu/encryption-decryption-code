import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.security.MessageDigest;
import java.security.SecureRandom;
import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public class EncryptionDecryptionClass {
	public static String encryptMessageGH(String message, String password) throws Exception {
	    MessageDigest sha = MessageDigest.getInstance("SHA-256");
	    byte[] key = sha.digest(password.getBytes("UTF-8"));
	    SecretKeySpec aesKey = new SecretKeySpec(key, "AES");
	    byte[] iv = new byte[16];
	    new SecureRandom().nextBytes(iv);
	    Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
	    cipher.init(Cipher.ENCRYPT_MODE, aesKey, new IvParameterSpec(iv));
	    byte[] ciphertext = cipher.doFinal(message.getBytes());
	    byte[] encrypted = new byte[iv.length + ciphertext.length];
	    System.arraycopy(iv, 0, encrypted, 0, iv.length);
	    System.arraycopy(ciphertext, 0, encrypted, iv.length, ciphertext.length);
	    return Base64.getEncoder().encodeToString(encrypted);
	}

	public static String decryptMessageGH(String encryptedMessage, String password) throws Exception {
	    MessageDigest sha = MessageDigest.getInstance("SHA-256");
	    byte[] key = sha.digest(password.getBytes("UTF-8"));
	    SecretKeySpec aesKey = new SecretKeySpec(key, "AES");
	    byte[] encrypted = Base64.getDecoder().decode(encryptedMessage);
	    byte[] iv = new byte[16];
	    System.arraycopy(encrypted, 0, iv, 0, iv.length);
	    byte[] ciphertext = new byte[encrypted.length - iv.length];
	    System.arraycopy(encrypted, iv.length, ciphertext, 0, ciphertext.length);
	    Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
	    cipher.init(Cipher.DECRYPT_MODE, aesKey, new IvParameterSpec(iv));
	    return new String(cipher.doFinal(ciphertext), "UTF-8");
	}

	public static void main(String[] args) throws Exception {
	    String orig = "Test message";
	    String enc = encryptMessageGH(orig, "abcdef123");
	    System.out.println("Encrypted: " + enc);
	    String dec = decryptMessageGH(enc, "abcdef123");
	    System.out.println("Decrypted: " + dec);
	}
}




public class TestEncryptDecrypt {
	public static void encryptMessageGH(String password) throws Exception {	//msg or entire text file should be sent in parameter
		File decryptedFile = new File("D:\\ReadTxtFile\\samplefile.txt");
    	File encryptedFile = new File("D:\\ReadTxtFile\\encryptedfile.txt");
    	BufferedWriter write = new BufferedWriter(new FileWriter(encryptedFile));
    	String line = "";
    	try (BufferedReader read = new BufferedReader(new FileReader(decryptedFile))) {
    		while((line = read.readLine())!=null) {
    			MessageDigest sha = MessageDigest.getInstance("SHA-256");
        	    byte[] key = sha.digest(password.getBytes("UTF-8"));
        	    SecretKeySpec aesKey = new SecretKeySpec(key, "AES");
        	    byte[] iv = new byte[16];
        	    new SecureRandom().nextBytes(iv);
        	    Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
        	    cipher.init(Cipher.ENCRYPT_MODE, aesKey, new IvParameterSpec(iv));
        	    byte[] ciphertext = cipher.doFinal(line.getBytes());
        	    byte[] encrypted = new byte[iv.length + ciphertext.length];
        	    System.arraycopy(iv, 0, encrypted, 0, iv.length);
        	    System.arraycopy(ciphertext, 0, encrypted, iv.length, ciphertext.length);
        	    String msg =  Base64.getEncoder().encodeToString(encrypted);
        	    write.write(msg);
        	    write.newLine();
    		}
    		read.close();
    		write.close();
    		System.out.println("Encrypted File Created!!");
    	}catch(Exception e) {
    		e.printStackTrace();
    	}
	}

	public static void decryptMessageGH(String password) throws Exception {
		File encryptedFile = new File("D:\\ReadTxtFile\\encryptedfile.txt");
		File decryptedFile = new File("D:\\ReadTxtFile\\decryptedfile.txt");
		String line = "";
		BufferedWriter write = new BufferedWriter(new FileWriter(decryptedFile));
		try (BufferedReader read = new BufferedReader(new FileReader(encryptedFile))) {
			while((line = read.readLine())!= null) {
				MessageDigest sha = MessageDigest.getInstance("SHA-256");
			    byte[] key = sha.digest(password.getBytes("UTF-8"));
			    SecretKeySpec aesKey = new SecretKeySpec(key, "AES");
			    byte[] encrypted = Base64.getDecoder().decode(line);
			    byte[] iv = new byte[16];
			    System.arraycopy(encrypted, 0, iv, 0, iv.length);
			    byte[] ciphertext = new byte[encrypted.length - iv.length];
			    System.arraycopy(encrypted, iv.length, ciphertext, 0, ciphertext.length);
			    Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
			    cipher.init(Cipher.DECRYPT_MODE, aesKey, new IvParameterSpec(iv));
			    String msg = new String(cipher.doFinal(ciphertext), "UTF-8");
			    write.write(msg);
			    write.newLine();
			}
			read.close();
			write.close();
			System.out.println("Decrypted File Created!!");
		}catch(Exception e) {
			e.printStackTrace();
		}
	    
	}

	public static void main(String[] args) throws Exception {
//	    TestEncryptDecrypt.encryptMessageGH("abcdef123");
	    TestEncryptDecrypt.decryptMessageGH("abcdef123");
	}
}
